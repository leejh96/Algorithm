function solution(m, n, board) {
    board = board.map(line => line.split(""));
    
    while(true){
        const explode = [];
        for(let i = 1; i < m; i++){
            for(let j = 1; j<n; j++){
                if(board[i][j] && board[i][j] === board[i][j - 1] && board[i][j] === board[i - 1][j - 1] && board[i][j] === board[i - 1][j]){
                    explode.push([i, j]);
                }
            }
        }
        if(!explode.length){
            let count = 0;
            board.forEach((line) => {
                for(let k of line){
                    if(!k){
                        count += 1;
                    }
                }
            });
            return count;
        }
        
        for(let element of explode){
            const [i, j] = element;
            board[i][j] = "";
            board[i][j - 1] = "";
            board[i - 1][j - 1] = "";
            board[i - 1][j] = "";
        }

        for(let j = 0; j<n; j++){
            const empty = []
            for(let i = m - 1; i >= 0; i--){
                if(!board[i][j]){
                    empty.push([i, j]);
                }else{
                    if(empty.length){
                        const [a, b] = empty.shift();
                        board[a][b] = board[i][j];
                        board[i][j] = "";
                        empty.push([i, j])
                    }
                }
            }
        }
    }
}
