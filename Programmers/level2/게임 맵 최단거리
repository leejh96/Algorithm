function solution(maps) {
    let answer = 1;
    let visited = maps;
    let queue = [];
    const dx = [-1, 1, 0, 0];
    const dy = [0, 0, -1, 1];
    const n = maps.length;
    const m = maps[0].length;
    
    queue.push([0, 0]);
    visited[0][0] = 0;
    
    while(queue.length > 0) {

        let size = queue.length;
        for(let i = 0; i < size; i++) {
            let [x, y] = queue.shift(); //배열 처음 값 제거 후 x,y로 변경
            
            for(let j = 0; j < 4; j++) { //상하좌우로 이동
                let nx = x + dx[j];
                let ny = y + dy[j];
                
                if(nx >= 0 && nx < n && ny >= 0 && ny < m && visited[nx][ny] === 1) {// 이동한 값이 0<x<5 0<y<5 이고 그 값이 1인경우
                    if(nx == n - 1 && ny == m - 1) { // 이동한 값이 도착했을 경우
                        return ++answer;
                    }
                    queue.push([nx, ny]);
                    visited[nx][ny] = 0; //이동한 곳은 0으로 변경
                }
            }
        }
        answer++;
    }
    
    return -1;
}
